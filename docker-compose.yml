version: "3.4"
services:
  db:
    image: postgres
    restart: always
    environment:
      POSTGRES_SERVER: "${POSTGRES_SERVER}"
      POSTGRES_PORT: "${POSTGRES_PORT}"
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}" 
      POSTGRES_DB: "${POSTGRES_DB}" 
    networks:
      - backend 
  backend:
    build: backend/.
    restart: always
    ports:
      - 5000:5000
    environment:
      POSTGRES_SERVER: "${POSTGRES_SERVER}"
      POSTGRES_PORT: "${POSTGRES_PORT}"
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}" 
      POSTGRES_DB: "${POSTGRES_DB}" 
    networks:
      - backend 
    depends_on:
      - db
  frontend:
    build: frontend/.
    restart: always
    environment:
      SECRET_KEY: "${POSTGRES_SERVER}"
    ports:
      - 80:5000
    networks:
      - frontend 
      - backend 
    depends_on:
      - backend 
  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
    networks:
      - management 
      - backend
networks:
        frontend:
        backend:
        management:
